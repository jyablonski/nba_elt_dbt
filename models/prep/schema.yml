version: 2

models:
  - name: prep_boxscores_table
    description: Prep table for boxscores data
    columns:
      - name: team
        tests:
          - not_null
  - name: prep_schedule_table
    description: Prep table for schedule + odds data
    columns:
      - name: away_team
        tests:
          - not_null
      - name: home_team
        tests:
          - not_null
  - name: prep_standings_table
    description: Prep table for standings table
    tests:
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: total_injuries
          column_B: active_injuries
          or_equal: True
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: total_injuries
          column_B: active_protocols
          or_equal: True
    columns:
      - name: wins_last_10
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10
      - name: losses_last_10
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10
      - name: projected_wins
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 82
      - name: projected_losses
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 82
  - name: prep_bans
    description: '{{ doc("prep_bans")}}'
    tests:
    - dbt_expectations.expect_table_row_count_to_equal:
        value: 2
  - name: prep_recent_games_teams
    description: '{{ doc("prep_recent_games_teams")}}'
    tests:
    - dbt_expectations.expect_compound_columns_to_be_unique:
        column_list: ["team", "game_id"]
  - name: prep_player_most_recent_team
    tests:
    - dbt_expectations.expect_table_row_count_to_equal_other_table:
        compare_model: ref("prep_contract_value_analysis")
        factor: 1
    columns:
      - name: player
        tests:
          - not_null
          - unique
  - name: prep_team_blown_leads
    tests:
    - dbt_expectations.expect_table_row_count_to_equal_other_table:
        compare_model: ref("prep_schedule_analysis")
  - name: prep_schedule_analysis
    tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
          compare_model: ref("prep_team_blown_leads")
  - name: prep_contract_value_analysis
    tests:
      - dbt_expectations.expect_compound_columns_to_be_unique:
          column_list: ["player", "team"]
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
          compare_model: ref("prep_player_most_recent_team")
          factor: 1
  - name: prep_pbp_table
    columns:
      - name: game_description
        tests:
          - not_null
      - name: game_id
        tests:
          - not_null
  - name: prep_odds_analysis
    columns:
      - name: g_type
        tests:
          - dbt_expectations.expect_column_values_to_be_in_set:
              value_set: ['Underdog','Favored']