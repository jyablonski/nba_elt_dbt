name: ECR Deployment

on:
  push:
    branches:
      - master

env:
  IAM_ROLE: ${{ secrets.IAM_ROLE_ECR }}
  AWS_REGION: "us-east-1"
  DBT_HOST: ${{ secrets.DBT_HOST }}
  DBT_DBNAME: ${{ secrets.DBT_DBNAME }}
  DBT_SCHEMA: ${{ secrets.DBT_SCHEMA }}
  DBT_USER: ${{ secrets.DBT_USER }}
  DBT_DOCS_BUCKET: ${{ secrets.DBT_DOCS_BUCKET }}

permissions:
  id-token: write
  contents: read # This is required for actions/checkout

jobs:
  cd_pipeline:
    name: Deploy Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Build and Push Docker Image to ECR
        uses: jyablonski/actions/deploy@v1
        with:
          role-to-assume: ${{ env.IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
          ecr-repo: jacobs_repo
          image-name: nba_elt_pipeline_dbt
          dockerfile: docker/Dockerfile
          context: .

      - name: Generate & Deploy dbt Docs
        env:
          aws_bucket: ${{ secrets.DBT_DOCS_BUCKET }}
        run: |
          make cd-docs-generate
          aws s3 cp dbt_output/ s3://$aws_bucket/ --recursive --exclude "*" --include "catalog.json" --include "run_results.json" --include "index.html" --include "manifest.json"

  deploy-alert:
    needs: cd_pipeline
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4

      - name: Slack Deploy Notification
        uses: jyablonski/actions/slack_alert@v1
        with:
          message: ${{ job.status == 'success' && 'dbt Deployed to Production' || 'dbt Failed to deploy properly' }}
          title: ${{ job.status == 'success' && 'dbt Deploy Pipeline' || 'dbt Deploy Failure' }}
          color: ${{ job.status == 'success' && 'good' || 'danger' }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
